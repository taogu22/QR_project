Two rules:
(1) If both quantities of some entity are intervals, then they cannot both change in one step.
(2) When v_V = 0, and a_I != 0, then in the next step, v_V and a_I should share the same symbol.
 
 (('+', '+'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '0'), ('+', '0'))


(('+', '+'), ('+', '0'), ('+', '0')) -> (('+', '+'), ('+', '-'), ('+', '-') :1
(('+', '+'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '-'), ('+', '-'))

(('+', '-'), ('+', '0'), ('+', '0')) -> (('+', '-'), ('+', '+'), ('+', '+')) :1



(('+', '-'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '+'), ('+', '+'))


(('+', '0'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '-'), ('+','-'))

V(1) = 0 implies I(0) = O(0)
(('+', '0'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '+'), ('+', '+'))

(('+', '0'), ('+', '0'), ('+', '0')) -> (('+', '+'), ('+', '-'), ('+', '-'))

(('+', '0'), ('+', '0'), ('+', '0')) -> (('+', '-'), ('+', '+'), ('+', '+'))



(('+', '0'), ('max', '0'), ('max', '0')) -> (('+', '0'), ('max', '-'), ('max', '-'))
(('+', '0'), ('max', '0'), ('max', '0')) -> (('+', '+'), ('max', '-'), ('max', '-'))


(('+', '+'), ('max', '0'), ('max', '0')) -> (('+', '+'), ('max', '-'), ('max', '-'))
(('+', '+'), ('max', '0'), ('max', '0')) -> (('+', '0'), ('max', '-'), ('max', '-'))

Seems that a major problem is the mutual changes of the second variable for Volumn and Outflow;


(('0', '0'), ('max', '0'), ('max', '0')) -> (('0', '+'), ('max', '0'), ('max', '0'))


(('+', '0'), ('+', '-'), ('+', '-')) -> (('+', '+'), ('+', '0'), ('+', '0'))
(('+', '-'), ('+', '-'), ('+', '-')) -> (('+', '-'), ('+', '0'), ('+', '0'))

(('+', '-'), ('+', '0'), ('+', '0')) -> (('+', '0'), ('+', '0'), ('+', '0')) Admissible: flash turn-down
(('+', '0'), ('+', '0'), ('+', '0')) -> (('+', '-'), ('+', '0'), ('+', '0')) Why is this not admissible?
